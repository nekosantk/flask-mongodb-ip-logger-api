services:
  web:
    build:
      context: nginx
    volumes:
      - ./nginx/ssl/:/ssl
    environment:
      - FLASK_SERVER_ADDR=backend:${FLASK_SERVER_PORT}
      - ANGULAR_ADDR=angular:${ANGULAR_PORT}
    ports:
      - ${HTTP_PORT}:${HTTP_PORT}
      - ${HTTPS_PORT}:${HTTPS_PORT}
      - ${EXTERNAL_API_PORT}:${EXTERNAL_API_PORT}
    depends_on:
      - backend

  backend:
    build:
      context: flask
    # flask requires SIGINT to stop gracefully
    # (default stop signal from Compose is SIGTERM)
    stop_signal: SIGINT
    ports:
      - ${FLASK_SERVER_PORT}:${FLASK_SERVER_PORT}
    volumes:
      - ./flask:/src
    environment:
      - MONGO_SERVER_ADDRESS=mongo
      - MONGO_DB_NAME=${MONGO_DB_NAME}
      - MONGO_SERVER_PORT=${MONGO_SERVER_PORT}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    depends_on:
      -  mongo

  mongo:
    image: mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - ${MONGO_SERVER_PORT}:${MONGO_SERVER_PORT}

  angular:
    build:
      context: angular
    ports:
      - ${ANGULAR_PORT}:${ANGULAR_PORT}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./angular:/project
      - /project/node_modules
